(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{393:function(t,s,a){t.exports=a.p+"assets/img/image-20200702230738787.888c90b5.png"},394:function(t,s,a){t.exports=a.p+"assets/img/image-20200702231655495.86f87b0b.png"},395:function(t,s,a){t.exports=a.p+"assets/img/image-20200702235120016.2db774e9.png"},396:function(t,s,a){t.exports=a.p+"assets/img/image-20200702235213223.1b70f55b.png"},566:function(t,s,a){"use strict";a.r(s);var v=a(20),_=Object(v.a)({},(function(){var t=this,s=t.$createElement,v=t._self._c||s;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"数据结构和算法概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法概述"}},[t._v("#")]),t._v(" 数据结构和算法概述")]),t._v(" "),v("h2",{attrs:{id:"数据结构和算法的关系"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#数据结构和算法的关系"}},[t._v("#")]),t._v(" 数据结构和算法的关系")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("数据（data）结构（structure）是一门研究 "),v("strong",[t._v("组织数据方式")]),t._v(" 的学科")]),t._v(" "),v("p",[t._v("有了编程语言也就有了数据结构，学好数据结构可以编写出更加漂亮，更加有效率的代码。")]),t._v(" "),v("p",[t._v("学好数据结构，只是为学习算法打好一个基础，并不代表你就能写出一个好的算法。")])]),t._v(" "),v("li",[v("p",[t._v("学以致用")]),t._v(" "),v("p",[t._v("要学习好数据结构，就要多多考虑如何将生活中遇到的问题，用程序去实现解决")])]),t._v(" "),v("li",[v("p",[t._v("程序 = 数据结构 + 算法")])]),t._v(" "),v("li",[v("p",[t._v("数据结构是算法的基础")]),t._v(" "),v("p",[t._v("想要学好算法，就必须要把数据结构学到位。")])])]),t._v(" "),v("h2",{attrs:{id:"看几个实际编程中遇到的问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#看几个实际编程中遇到的问题"}},[t._v("#")]),t._v(" 看几个实际编程中遇到的问题")]),t._v(" "),v("h3",{attrs:{id:"字符串替换问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#字符串替换问题"}},[t._v("#")]),t._v(" 字符串替换问题")]),t._v(" "),v("div",{staticClass:"language-java line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-java"}},[v("code",[v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" str "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java,Java, hello,world!"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" newStr "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" str"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Java"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"尚硅谷~"')]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//算法")]),t._v("\n  "),v("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),v("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),v("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newStr="')]),t._v(" "),v("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" newStr"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br"),v("span",{staticClass:"line-number"},[t._v("2")]),v("br"),v("span",{staticClass:"line-number"},[t._v("3")]),v("br"),v("span",{staticClass:"line-number"},[t._v("4")]),v("br"),v("span",{staticClass:"line-number"},[t._v("5")]),v("br")])]),v("p",[t._v("上述代码使用了 JDK 的 "),v("code",[t._v("replaceAll")]),t._v(" 方法来替换字符串，我们需要了解他的原理，它肯定是有一个算法来支撑这个功能的，只有看懂了这个算法，我们才能在一些场景上的优化。")]),t._v(" "),v("p",[t._v("那么这里有一个面试题：用 "),v("strong",[t._v("单链表")]),t._v(" 实现一些字符串的功能")]),t._v(" "),v("p",[t._v("具体题目：试写出用 "),v("strong",[t._v("单链表")]),t._v(" 表示的字符串类及字符串结点类的定义，并依次实现它的构造函数、以及计算串长度、串赋值、判断两串相等、求子串、两串连接、求子串在串中位置等 7 个成员函数。")]),t._v(" "),v("h2",{attrs:{id:"实现一个五子棋程序"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#实现一个五子棋程序"}},[t._v("#")]),t._v(" 实现一个五子棋程序")]),t._v(" "),v("p",[v("img",{attrs:{src:a(393),alt:"image-20200702230738787"}})]),t._v(" "),v("p",[t._v("实现上图的几个功能，如：")]),t._v(" "),v("ul",[v("li",[t._v("如何判断游戏的输赢？")]),t._v(" "),v("li",[t._v("实现存档退出")]),t._v(" "),v("li",[t._v("实现继续上局的功能")])]),t._v(" "),v("p",[t._v("其实这些功能就涉及到了需要一些数据结构和算法来实现需求。比如：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("存档功能：")]),t._v(" "),v("p",[t._v("棋盘用 "),v("strong",[t._v("二维组")]),t._v(" 实现，然后写入文件")])]),t._v(" "),v("li",[v("p",[t._v("继续上局")]),t._v(" "),v("p",[t._v("读取文件，还原成二维数组，再渲染成棋盘")])])]),t._v(" "),v("p",[t._v("功能实现了，那么是不是可以进一步优化呢？在使用数组存文件时，就可以转成 "),v("strong",[t._v("稀疏数组")]),t._v("，达到 "),v("strong",[t._v("数据压缩")]),t._v(" 的目的，读取文件时，先解析成稀疏数组，再解压成二维数组。")]),t._v(" "),v("p",[t._v("如果上面提到的一些数据结构你不知道，那么就无法完成这个功能。")]),t._v(" "),v("h2",{attrs:{id:"约瑟夫问题-丢手帕问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#约瑟夫问题-丢手帕问题"}},[t._v("#")]),t._v(" 约瑟夫问题（丢手帕问题）")]),t._v(" "),v("p",[v("img",{attrs:{src:a(394),alt:"image-20200702231655495"}})]),t._v(" "),v("p",[t._v("约瑟夫（Josephu）问题，也就是丢手帕问题，他的规则如下")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("有编号为 1 ~ n 的 n 个人围坐在一起")])]),t._v(" "),v("li",[v("p",[t._v("约定编号为 K( 1 <= k <=n)  的人从 1 开始报数")])]),t._v(" "),v("li",[v("p",[t._v("数到 m 的那个人出列，它的下一位又从 1 开始报数")])])]),t._v(" "),v("p",[t._v("循环以上过程，直到所有人都出列，并列出出列人的编号。")]),t._v(" "),v("p",[t._v("该问题其实可以使用 "),v("strong",[t._v("单循环链表（单向环形链表）")]),t._v(" 来解决，思路如下：")]),t._v(" "),v("ol",[v("li",[t._v("先构成一个有 n 个节点的单循环链表")]),t._v(" "),v("li",[t._v("然后由 k 节点起从 1 开始计数")]),t._v(" "),v("li",[t._v("计数到 m 时，对应节点从链表中删除，然后从下一个节点又从 1 开始计数")])]),t._v(" "),v("p",[t._v("循环以上过程，直到最后一个节点从链表中删除，算法结束")]),t._v(" "),v("p",[t._v("如果没有学过单循环链表，使用数组也是可以实现的，只是在性能上不是那么如意。")]),t._v(" "),v("h2",{attrs:{id:"其他常见算法问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#其他常见算法问题"}},[t._v("#")]),t._v(" 其他常见算法问题")]),t._v(" "),v("p",[t._v("比如有：磁盘问题、公交车、画图、矩阵中查找单词路径数、球和篮子、扔石头 等。")]),t._v(" "),v("p",[t._v("这里来看看几个问题需要用到的算法：")]),t._v(" "),v("ul",[v("li",[t._v("修路问题：\n"),v("ul",[v("li",[t._v("数据结构：最小生成树（加权值）")]),t._v(" "),v("li",[t._v("算法：普利姆算法")])])]),t._v(" "),v("li",[t._v("最短路径问题\n"),v("ul",[v("li",[t._v("数据结构：图")]),t._v(" "),v("li",[t._v("算法：弗洛伊德算法")])])]),t._v(" "),v("li",[t._v("汉诺塔：分治算法")]),t._v(" "),v("li",[t._v("八皇后问题：回溯法")])]),t._v(" "),v("p",[t._v("可以看到问题有难易程度，简单的可能一个数据结构就搞定了，难的需要一起用。")]),t._v(" "),v("h2",{attrs:{id:"线性-非线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性-非线性结构"}},[t._v("#")]),t._v(" 线性/非线性结构")]),t._v(" "),v("p",[t._v("数据结构主要包括："),v("strong",[t._v("线性结构")]),t._v(" 和 "),v("strong",[t._v("非线性结构")])]),t._v(" "),v("h3",{attrs:{id:"线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#线性结构"}},[t._v("#")]),t._v(" 线性结构")]),t._v(" "),v("p",[t._v("如下图所示")]),t._v(" "),v("p",[v("img",{attrs:{src:a(395),alt:"image-20200702235120016"}})]),t._v(" "),v("p",[t._v("最常用的数据结构，其特点是：数据元素之间存在 "),v("strong",[t._v("1 对 1 的线性关系")])]),t._v(" "),v("div",{staticClass:"language- line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-text"}},[v("code",[t._v("比如数组  a[0] = 30，一个下标只对应一个值\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("线性结构有两种不同的存储结构：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("顺序存储结构")]),t._v(" "),v("p",[t._v("顺序存储的 "),v("strong",[t._v("线性表")]),t._v(" 称为 "),v("strong",[t._v("顺序表")]),t._v("，顺序表中的存储元素 "),v("strong",[t._v("都是连续")]),t._v(" 的")])]),t._v(" "),v("li",[v("p",[t._v("链式存储结构")]),t._v(" "),v("p",[t._v("链式存储的 "),v("strong",[t._v("线性表")]),t._v(" 称为 "),v("strong",[t._v("链表")]),t._v("，链表中的存储元素 "),v("strong",[t._v("不一定是连续")]),t._v(" 的，元素节点中存放 "),v("strong",[t._v("数据元素")]),t._v(" 以及 "),v("strong",[t._v("相邻元素的地址信息")])])])]),t._v(" "),v("p",[t._v("线性结构常见的有：")]),t._v(" "),v("ul",[v("li",[t._v("数组")]),t._v(" "),v("li",[t._v("队列")]),t._v(" "),v("li",[t._v("链表")]),t._v(" "),v("li",[t._v("栈")])]),t._v(" "),v("p",[t._v("不同的结构又有不同的实现方式，后面会详细讲解。")]),t._v(" "),v("h3",{attrs:{id:"非线性结构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#非线性结构"}},[t._v("#")]),t._v(" 非线性结构")]),t._v(" "),v("p",[t._v("它的元素之间至少不是  1 对 1 的关系了，有可能如下图所示")]),t._v(" "),v("p",[v("img",{attrs:{src:a(396),alt:"image-20200702235213223"}})]),t._v(" "),v("p",[t._v("非线性结构包括：")]),t._v(" "),v("ul",[v("li",[t._v("二维数组")]),t._v(" "),v("li",[t._v("多维数组")]),t._v(" "),v("li",[t._v("广义表")]),t._v(" "),v("li",[t._v("树结构")]),t._v(" "),v("li",[t._v("图结构")])]),t._v(" "),v("p",[t._v("在非线性结构中，树结构和图结构用的最多的，他们又引申出来很多的相关算法。")])])}),[],!1,null,null,null);s.default=_.exports}}]);